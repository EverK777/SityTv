plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("com.google.dagger.hilt.android")
    id("androidx.navigation.safeargs")
    id 'kotlin-kapt'
}

def fileName = "secrets.properties"

if (!rootProject.file(fileName).exists())
    throw new Exception("File that contains secrets not found. add the file [secrets.properties]")


def apikeyPropertiesFile = rootProject.file(fileName)
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'com.jobsity.sitytv'
    compileSdk 33

    defaultConfig {
        applicationId "com.jobsity.sitytv"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
        vectorDrawables {
            useSupportLibrary true
        }

    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {

        debug {
            buildConfigField("String", "TV_MAZE_BASE_URL", apikeyProperties['TV_MAZE_BASE_URL'])
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "TV_MAZE_BASE_URL", apikeyProperties['TV_MAZE_BASE_URL'])
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"

        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
    buildFeatures {
        dataBinding true
        // for view binding:
        viewBinding true
    }
}

dependencies {
    // Import the Compose BOM
    implementation platform('androidx.compose:compose-bom:2022.11.00')
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha02'
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.activity:activity-compose:$activity_compose"
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraint_layout_compose"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation 'com.google.accompanist:accompanist-pager:0.13.0'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.13.0'
    implementation 'androidx.window:window:1.1.0-alpha04'

    // Dagger Hilt
    implementation("com.google.dagger:hilt-android:$hilt_di")
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_di"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"

    // Kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"

    //ROOM
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-ktx:$room"
    implementation "androidx.room:room-guava:$room"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room"


    //RETROFIT
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    // GSON CONVERTER
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    // GSON
    implementation 'com.google.code.gson:gson:2.8.9'
    // PAGING
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation("androidx.paging:paging-compose:1.0.0-alpha17")

    // GLIDE
    implementation "com.github.skydoves:landscapist-glide:1.4.4"
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // NAVIGATION COMPONENT
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_component"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_component"

    // OKHTTP PROFILER
    implementation 'com.localebro:okhttpprofiler:1.0.8'


    // Compatible with Compose Material, includes MdcTheme
    implementation "com.google.android.material:compose-theme-adapter:1.2.0"


    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.navigation:navigation-testing:2.5.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation "androidx.room:room-testing:$room"
    testImplementation "com.google.dagger:hilt-android-testing:2.38.1"
    testImplementation 'org.mockito:mockito-inline:3.5.13'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
    testImplementation "io.mockk:mockk:1.12.1"
    kaptTest "com.google.dagger:hilt-android-compiler:2.44"

    androidTestImplementation "com.google.dagger:hilt-android-testing:2.38.1"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:2.44"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation "androidx.paging:paging-common-ktx:$paging_version"
    androidTestImplementation 'androidx.test.ext:truth:1.5.0'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.5.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.3.1"

    debugImplementation 'androidx.test:core:1.5.0'
    debugImplementation 'androidx.test:runner:1.5.1'
    debugImplementation 'androidx.test:rules:1.5.0'
    debugImplementation "androidx.fragment:fragment-testing:1.5.4"
    debugImplementation "androidx.fragment:fragment-ktx:1.5.4"
    debugImplementation "androidx.compose.ui:ui-tooling"
}

kapt {
    correctErrorTypes = true
}